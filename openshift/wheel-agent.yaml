apiVersion: v1
kind: Template
metadata:
  name: wheel-agent
parameters:
  - name: CONFIG_REPOSITORY_URL
    displayName: Wheel Config Repository URL
    value: "https://github.com/wheel-sh/demo-cluster-config.git"
    required: true
  - name: CONFIG_REPOSITORY_BRANCH
    displayName: Git Branch
    value: "master"
    required: true
objects:
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: wheel-agent
      name: wheel-agent
    spec:
      ports:
        - name: 8080-tcp
          port: 8080
          protocol: TCP
          targetPort: 8080
      selector:
        deploymentconfig: wheel-agent
  - apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: wheel-agent
      name: wheel-agent
      namespace: wheel
    spec:
      replicas: 1
      selector:
        app: wheel-agent
        deploymentconfig: wheel-agent
      template:
        metadata:
          labels:
            app: wheel-agent
            deploymentconfig: wheel-agent
        spec:
          serviceAccount: wheel-agent
          serviceAccountName: wheel-agent
          containers:
            - env:
                - name: CONFIG_REPOSITORY_URL
                  value: ${CONFIG_REPOSITORY_URL}
                - name: CONFIG_REPOSITORY_BRANCH
                  value: ${CONFIG_REPOSITORY_BRANCH}
              imagePullPolicy: Always
              name: wheel-agent
              ports:
                - containerPort: 8080
                  protocol: TCP
              volumeMounts:
                - mountPath: /.kube
                  name: kubeconfig
          volumes:
            - name: kubeconfig
              emptyDir: {}
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - wheel-agent
            from:
              kind: ImageStreamTag
              name: 'wheel-agent:latest'
              namespace: cicd
          type: ImageChange
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: wheel-agent
      name: wheel-agent
    spec:
      port:
        targetPort: 8080-tcp
      tls:
        termination: edge
      to:
        kind: Service
        name: wheel-agent
  - apiVersion: v1
    kind: ServiceAccount
    metadata:
      name: wheel-agent

